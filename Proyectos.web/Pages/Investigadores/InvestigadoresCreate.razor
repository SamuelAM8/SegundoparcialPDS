﻿ 
@page "/investigadores/create"
@using Proyectos.Shared.Entities
@using Proyectos.web.Repositories

@inject SweetAlertService sweetAlertService
@inject IRepository repository
@inject NavigationManager navigationManager

<h3>Crear</h3>

<InvestigadoresForm @ref="InvestigadoresForm" Investigadores="investigadores" OnValidSubmit="Create" ReturnAction="Return" />

@code {
    private Investigadores investigadores = new Investigadores();
    private InvestigadoresForm InvestigadoresForm;



    private async Task Create()
    {


        var responseHttp = await repository.PostAsync("/api/Investigadores", investigadores);
        if (responseHttp.Error)
        {

            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;


        }

        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000




            });


        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {




        InvestigadoresForm!.FormularioPosteadoConExito = true;
        navigationManager.NavigateTo("investigadores");




    }


}
}
